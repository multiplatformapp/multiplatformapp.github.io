I"LK<h2 id="install-android-studio-and-xcode">Install Android Studio and XCode</h2>
<p>First Android Studio and Xcode need to be installed.</p>

<h2 id="setup-enviroments-variable">Setup enviroments variable</h2>

<h3 id="mac">Mac</h3>
<p>Add these to your <code class="language-plaintext highlighter-rouge">.zprofile</code> (or <code class="language-plaintext highlighter-rouge">.bashprofile</code> if you use bash).</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">ANDROID_HOME</span><span class="o">=</span>~/Library/Android/sdk
<span class="nb">export </span><span class="nv">ANDROID_SDK_ROOT</span><span class="o">=</span>~/Library/Android/sdk
<span class="nb">export </span><span class="nv">ANDROID_AVD_HOME</span><span class="o">=</span>~/.android/avd
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$ANDROID_HOME</span>/emulator
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$ANDROID_HOME</span>/tools
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$ANDROID_HOME</span>/tools/bin
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$ANDROID_HOME</span>/platform-tools

<span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span>/Library/Java/JavaVirtualMachines/jdk1.8.0_291.jdk/Contents/Home
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$JAVA_HOME</span>/bin
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$ANDROID_HOME</span>/cmdline-tools/tools/bin
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$ANDROID_HOME</span>/platform-tools
</code></pre></div></div>
<p>Note above <code class="language-plaintext highlighter-rouge">JAVA_HOME</code> is my local machine default path, might be different minor version for you, but as long as it is <code class="language-plaintext highlighter-rouge">jkd.1.8.xxx</code> then it is ok.</p>

<h3 id="windows">Windows</h3>
<p>[WIP], make sure those paths are added in <code class="language-plaintext highlighter-rouge">Enviroment Variables</code></p>

<h2 id="install-appium">Install Appium</h2>

<h3 id="install-appium-1">Install Appium</h3>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> appium
</code></pre></div></div>
<h3 id="install-appium-doctor">Install Appium doctor</h3>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> appium-doctor
</code></pre></div></div>

<h2 id="create-appium-dotnet-client-project">Create Appium Dotnet Client Project</h2>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet new classlib <span class="nt">-o</span> AppiumDotnetClient
</code></pre></div></div>

<h3 id="add-nuget-packages">Add nuget packages</h3>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet add package Appium.WebDriver <span class="nt">--version</span> 4.3.1
</code></pre></div></div>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet add package NUnit <span class="nt">--version</span> 3.13.2
</code></pre></div></div>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet add package NUnit3TestAdapter <span class="nt">--version</span> 4.0.0
</code></pre></div></div>

<p>Alternative paste these in <code class="language-plaintext highlighter-rouge">.csproj</code> file, then run <code class="language-plaintext highlighter-rouge">dotnet restore</code></p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="p">&lt;</span><span class="n">ItemGroup</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">PackageReference</span> <span class="n">Include</span><span class="p">=</span><span class="s">"Appium.WebDriver"</span> <span class="n">Version</span><span class="p">=</span><span class="s">"4.3.1"</span> <span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">PackageReference</span> <span class="n">Include</span><span class="p">=</span><span class="s">"NUnit"</span> <span class="n">Version</span><span class="p">=</span><span class="s">"3.13.2"</span> <span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">PackageReference</span> <span class="n">Include</span><span class="p">=</span><span class="s">"NUnit3TestAdapter"</span> <span class="n">Version</span><span class="p">=</span><span class="s">"4.0.0"</span> <span class="p">/&gt;</span>
  <span class="p">&lt;/</span><span class="n">ItemGroup</span><span class="p">&gt;</span>
</code></pre></div></div>

<h2 id="create-first-android-test">Create first android test:</h2>
<p>Create <code class="language-plaintext highlighter-rouge">FirstAndroidTest.cs</code></p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">NUnit.Framework</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">OpenQA.Selenium.Appium</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">OpenQA.Selenium.Appium.Android</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">OpenQA.Selenium.Appium.Enums</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">AppiumDotnetClient</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">FirstAndroidTest</span>
    <span class="p">{</span>
        <span class="k">private</span> <span class="n">AppiumDriver</span><span class="p">&lt;</span><span class="n">AndroidElement</span><span class="p">&gt;</span> <span class="n">_driver</span><span class="p">;</span>

        <span class="p">[</span><span class="n">SetUp</span><span class="p">]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">Setup</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">currentTestDirectory</span> <span class="p">=</span> <span class="n">Directory</span><span class="p">.</span><span class="nf">GetParent</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">AppDomain</span><span class="p">.</span><span class="n">CurrentDomain</span><span class="p">.</span><span class="n">BaseDirectory</span><span class="p">)</span>
                                            <span class="p">.</span><span class="n">Parent</span><span class="p">.</span><span class="n">Parent</span><span class="p">.</span><span class="n">Parent</span><span class="p">.</span><span class="n">FullName</span><span class="p">;</span>

            <span class="kt">var</span> <span class="n">driverOptions</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">AppiumOptions</span><span class="p">();</span>
            <span class="n">driverOptions</span><span class="p">.</span><span class="nf">AddAdditionalCapability</span><span class="p">(</span><span class="n">MobileCapabilityType</span><span class="p">.</span><span class="n">PlatformName</span><span class="p">,</span> <span class="s">"Android"</span><span class="p">);</span> 
            <span class="n">driverOptions</span><span class="p">.</span><span class="nf">AddAdditionalCapability</span><span class="p">(</span><span class="n">MobileCapabilityType</span><span class="p">.</span><span class="n">AutomationName</span><span class="p">,</span> <span class="s">"UIAutomator2"</span><span class="p">);</span> <span class="c1">//(1)</span>
            <span class="n">driverOptions</span><span class="p">.</span><span class="nf">AddAdditionalCapability</span><span class="p">(</span><span class="n">MobileCapabilityType</span><span class="p">.</span><span class="n">DeviceName</span><span class="p">,</span> <span class="s">"Pixel 3a Droid10"</span><span class="p">);</span>
            <span class="n">driverOptions</span><span class="p">.</span><span class="nf">AddAdditionalCapability</span><span class="p">(</span><span class="s">"avd"</span><span class="p">,</span> <span class="s">"Pixel_3a_Droid10"</span><span class="p">);</span> <span class="c1">//(2)</span>
            <span class="n">driverOptions</span><span class="p">.</span><span class="nf">AddAdditionalCapability</span><span class="p">(</span><span class="n">MobileCapabilityType</span><span class="p">.</span><span class="n">App</span><span class="p">,</span> <span class="s">$"</span><span class="p">{</span><span class="n">currentTestDirectory</span><span class="p">}</span><span class="s">/apps/DemoApp.apk"</span><span class="p">);</span> <span class="c1">//(3)</span>

            <span class="n">driverOptions</span><span class="p">.</span><span class="nf">AddAdditionalCapability</span><span class="p">(</span><span class="s">"appWaitActivity"</span><span class="p">,</span> <span class="s">"*.MainActivity"</span><span class="p">);</span> <span class="c1">//(4)</span>
            <span class="n">_driver</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AndroidDriver</span><span class="p">&lt;</span><span class="n">AndroidElement</span><span class="p">&gt;(</span><span class="k">new</span> <span class="nf">Uri</span><span class="p">(</span><span class="s">"http://localhost:4723/wd/hub"</span><span class="p">),</span> <span class="n">driverOptions</span><span class="p">);</span> <span class="c1">//(5)</span>
        <span class="p">}</span>

        <span class="p">[</span><span class="n">TearDown</span><span class="p">]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">TearDown</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">_driver</span><span class="p">?.</span><span class="nf">Quit</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="p">[</span><span class="n">Test</span><span class="p">]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">LaunchApp</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">Assert</span><span class="p">.</span><span class="nf">Pass</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<blockquote>
  <p><strong>(1)</strong> Appium supports both UIAutomator2 and Espresso for Android UI Automation test, we’ll be using UIAutomator2 this time.</p>
</blockquote>

<blockquote>
  <p><strong>(2)</strong> <code class="language-plaintext highlighter-rouge">avd</code> capability allows android device to be launched when test running, choose which ever emulator you have available on your machine.</p>
</blockquote>

<blockquote>
  <p><strong>(3)</strong> This is the path to your app, in this sample the app was downloaded from <a href="https://github.com/webdriverio/native-demo-app/releases">here</a></p>
</blockquote>

<blockquote>
  <p><strong>(4)</strong> This allows to wait untill the <code class="language-plaintext highlighter-rouge">MainActivity</code> started before running our test.</p>
</blockquote>

<blockquote>
  <p><strong>(5)</strong> This is the defaut address of appium server, default port is <code class="language-plaintext highlighter-rouge">4723</code>, different ports can be used for parallel run.</p>
</blockquote>

<h2 id="run-test">Run test</h2>
<h3 id="start-appium-server">Start Appium Server</h3>
<p>Open terminal and run</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>appium
</code></pre></div></div>
<p>Open another terminal and run</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dotnet <span class="nb">test</span>
</code></pre></div></div>

<p>Test should now run successfully and we should see this in our Appium server output</p>
<pre><code class="language-Node">[HTTP] &lt;-- POST /wd/hub/session 200 5696 ms - 1059
</code></pre>

<p>The test app launch and our test run.</p>

<h2 id="create-ios-first-test">Create iOS first test</h2>
<p>Create <code class="language-plaintext highlighter-rouge">FirstIOSTest.cs</code></p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">NUnit.Framework</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">OpenQA.Selenium.Appium</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">OpenQA.Selenium.Appium.Enums</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">OpenQA.Selenium.Appium.iOS</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">AppiumDotnetClient</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">FirstIOSTest</span>
    <span class="p">{</span>
        <span class="k">private</span> <span class="n">AppiumDriver</span><span class="p">&lt;</span><span class="n">IOSElement</span><span class="p">&gt;</span> <span class="n">_driver</span><span class="p">;</span>

        <span class="p">[</span><span class="n">SetUp</span><span class="p">]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">Setup</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">currentTestDirectory</span> <span class="p">=</span> <span class="n">Directory</span><span class="p">.</span><span class="nf">GetParent</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">AppDomain</span><span class="p">.</span><span class="n">CurrentDomain</span><span class="p">.</span><span class="n">BaseDirectory</span><span class="p">)</span>
                                            <span class="p">.</span><span class="n">Parent</span><span class="p">.</span><span class="n">Parent</span><span class="p">.</span><span class="n">Parent</span><span class="p">.</span><span class="n">FullName</span><span class="p">;</span>

            <span class="kt">var</span> <span class="n">driverOptions</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">AppiumOptions</span><span class="p">();</span>
            <span class="n">driverOptions</span><span class="p">.</span><span class="nf">AddAdditionalCapability</span><span class="p">(</span><span class="n">MobileCapabilityType</span><span class="p">.</span><span class="n">PlatformName</span><span class="p">,</span> <span class="s">"iOS"</span><span class="p">);</span>
            <span class="n">driverOptions</span><span class="p">.</span><span class="nf">AddAdditionalCapability</span><span class="p">(</span><span class="n">MobileCapabilityType</span><span class="p">.</span><span class="n">AutomationName</span><span class="p">,</span> <span class="s">"XCUITest"</span><span class="p">);</span> <span class="c1">//(1) </span>
            <span class="n">driverOptions</span><span class="p">.</span><span class="nf">AddAdditionalCapability</span><span class="p">(</span><span class="n">MobileCapabilityType</span><span class="p">.</span><span class="n">DeviceName</span><span class="p">,</span> <span class="s">"iPhone 12"</span><span class="p">);</span> <span class="c1">// (2) </span>
            <span class="n">driverOptions</span><span class="p">.</span><span class="nf">AddAdditionalCapability</span><span class="p">(</span><span class="n">MobileCapabilityType</span><span class="p">.</span><span class="n">PlatformVersion</span><span class="p">,</span> <span class="s">"14.5"</span><span class="p">);</span> <span class="c1">// (2) </span>
            <span class="n">driverOptions</span><span class="p">.</span><span class="nf">AddAdditionalCapability</span><span class="p">(</span><span class="n">MobileCapabilityType</span><span class="p">.</span><span class="n">App</span><span class="p">,</span> <span class="s">$"</span><span class="p">{</span><span class="n">currentTestDirectory</span><span class="p">}</span><span class="s">/apps/DemoApp.app.zip"</span><span class="p">);</span>
            <span class="c1">//(3)</span>
            <span class="n">_driver</span> <span class="p">=</span> <span class="k">new</span> <span class="n">IOSDriver</span><span class="p">&lt;</span><span class="n">IOSElement</span><span class="p">&gt;(</span><span class="k">new</span> <span class="nf">Uri</span><span class="p">(</span><span class="s">"http://localhost:4723/wd/hub"</span><span class="p">),</span> <span class="n">driverOptions</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="p">[</span><span class="n">TearDown</span><span class="p">]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">TearDown</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">_driver</span><span class="p">?.</span><span class="nf">Quit</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="p">[</span><span class="n">Test</span><span class="p">]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">LaunchApp</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">Assert</span><span class="p">.</span><span class="nf">Pass</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<blockquote>
  <p><strong>(1)</strong> XCUITest is used for testing iOS</p>
</blockquote>

<blockquote>
  <p><strong>(2)</strong> this can be check via Xcode to see what simulator &amp; OS version you have available, (run <code class="language-plaintext highlighter-rouge">xcrun simctl list</code>)</p>
</blockquote>

<blockquote>
  <p><strong>(3)</strong>  No capability is required to start an ios simulator because appium will do it for us</p>
</blockquote>

<p>Repeat above step to run test, test should now run successfully.</p>
:ET